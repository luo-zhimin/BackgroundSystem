<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.background.system.mapper.SizeMapper">
    <resultMap id="BaseResultMap" type="com.background.system.entity.Size">
        <!--@Table `size`-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="detail_pic" jdbcType="VARCHAR" property="detailPic"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="u_price" jdbcType="DECIMAL" property="uPrice"/>
        <result column="material_id" jdbcType="VARCHAR" property="materialId"/>
        <result column="size" jdbcType="VARCHAR" property="size"/>
        <result column="faces" jdbcType="VARCHAR" property='faces'/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        title,
        `name`,
        pic,
        detail_pic,
        price,
        u_price,
        material_id,
        `size`,
        `faces`
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `size`
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from `size`
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <select id="getSizeList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `size`
        <if test="page != null and size != null">
            limit #{page},#{size}
        </if>
    </select>

    <select id="getSizeCount" resultType="int">
        select count(*) from size
    </select>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.background.system.entity.Size" useGeneratedKeys="true">
        insert into `size` (title, `name`, pic,
        price, u_price, material_id,
        `size`, faces)
        values (#{title,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR},
        #{price,jdbcType=DECIMAL}, #{uPrice,jdbcType=DECIMAL}, #{materialId,jdbcType=VARCHAR},
        #{size,jdbcType=VARCHAR}, #{faces,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.background.system.entity.Size" useGeneratedKeys="true">
        insert into `size`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">
                title,
            </if>
            <if test="name != null and name != ''">
                `name`,
            </if>
            <if test="pic != null and pic != ''">
                pic,
            </if>
            <if test="detailPic != null and detailPic != ''">
                detail_pic,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="uPrice != null">
                u_price,
            </if>
            <if test="materialId != null and materialId != ''">
                material_id,
            </if>
            <if test="size != null and size != ''">
                `size`,
            </if>
            <if test="faces != null and faces != ''">
                faces,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != ''">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="pic != null and pic != ''">
                #{pic,jdbcType=VARCHAR},
            </if>
            <if test="detailPic != null and detailPic != ''">
                #{detailPic,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="uPrice != null">
                #{uPrice,jdbcType=DECIMAL},
            </if>
            <if test="materialId != null and materialId != ''">
                #{materialId,jdbcType=VARCHAR},
            </if>
            <if test="size != null and size != ''">
                #{size,jdbcType=VARCHAR},
            </if>
            <if test="faces != null and faces != ''">
                #{faces,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.background.system.entity.Size">
        update `size`
        <set>
            <if test="title != null and title != ''">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="name != null and name != ''">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="pic != null and pic != ''">
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="detailPic != null and detailPic != ''">
                detail_pic = #{detailPic,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="uPrice != null">
                u_price = #{uPrice,jdbcType=DECIMAL},
            </if>
            <if test="materialId != null and materialId != ''">
                material_id = #{materialId,jdbcType=VARCHAR},
            </if>
            <if test="size != null and size != ''">
                `size` = #{size,jdbcType=VARCHAR},
            </if>
            <if test="faces != null and faces != ''">
                faces = #{faces,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.background.system.entity.Size">
        update `size`
        set title = #{title,jdbcType=VARCHAR},
        `name` = #{name,jdbcType=VARCHAR},
        pic = #{pic,jdbcType=VARCHAR},
        price = #{price,jdbcType=DECIMAL},
        u_price = #{uPrice,jdbcType=DECIMAL},
        material_id = #{materialId,jdbcType=VARCHAR},
        `size` = #{size,jdbcType=VARCHAR},
        faces = #{faces,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>