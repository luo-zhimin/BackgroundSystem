<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.background.system.mapper.ConfigMapper">
    <resultMap id="BaseResultMap" type="com.background.system.entity.Config">
        <!--@mbg.generated-->
        <!--@Table config-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="config_key" jdbcType="VARCHAR" property="configKey"/>
        <result column="config_value" jdbcType="VARCHAR" property="configValue"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id,
        config_key,
        config_value,
        remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from config
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from config
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.background.system.entity.Config"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into config (config_key, config_value, remark)
        values (#{configKey,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.background.system.entity.Config"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="configKey != null">
                config_key,
            </if>
            <if test="configValue != null">
                config_value,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="configKey != null">
                #{configKey,jdbcType=VARCHAR},
            </if>
            <if test="configValue != null">
                #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.background.system.entity.Config">
        <!--@mbg.generated-->
        update config
        <set>
            <if test="configKey != null">
                config_key = #{configKey,jdbcType=VARCHAR},
            </if>
            <if test="configValue != null">
                config_value = #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.background.system.entity.Config">
        <!--@mbg.generated-->
        update config
        set config_key   = #{configKey,jdbcType=VARCHAR},
            config_value = #{configValue,jdbcType=VARCHAR},
            remark       = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="getConfigsByKeys" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from config
        where config_key in
        <foreach collection="keys" item="key" index="index" open="(" close=")" separator=",">
            #{key,jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="getConfigs" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from config
    </select>
</mapper>