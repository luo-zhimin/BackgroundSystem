<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.background.system.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.background.system.entity.Orderd">
        <!--@Table `orderd`-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="order_no" jdbcType="VARCHAR" property="wxNo"/>
        <result column="kd_no" jdbcType="VARCHAR" property="kdNo"/>
        <result column="is_pay" jdbcType="CHAR" property="isPay"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="port_price" jdbcType="DECIMAL" property="portPrice"/>
        <result column="is_del" jdbcType="CHAR" property="isDel"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="total" jdbcType="DECIMAL" property="total"/>
        <result column="coupon_id" jdbcType="BIGINT" property="couponId"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="address_id" jdbcType="VARCHAR" property="addressId"/>
        <result column="zip_path" jdbcType="VARCHAR" property="zipPath"/>
        <result column="is_download" jdbcType="CHAR" property="isDownload"/>
        <result column="caizhi_id" jdbcType="VARCHAR" property="caizhiId"/>
        <result column="size_id" jdbcType="VARCHAR" property="sizeId"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        order_no,
        kd_no,
        is_pay,
        remark,
        port_price,
        is_del,
        create_time,
        update_time,
        total,
        coupon_id,
        `status`,
        address_id,
        zip_path,
        is_download,
        size_id,
        caizhi_id,
        create_user,
        update_user
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `orderd`
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from `orderd`
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insertSelective" parameterType="com.background.system.entity.Orderd">
        insert into `orderd`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                id,
            </if>
            <if test="wxNo != null and wxNo != ''">
                order_no,
            </if>
            <if test="kdNo != null and kdNo != ''">
                kd_no,
            </if>
            <if test="isPay != null and isPay != ''">
                is_pay,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
            <if test="portPrice != null">
                port_price,
            </if>
            <if test="isDel != null and isDel != ''">
                is_del,
            </if>
                create_time,
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="couponId != null">
                coupon_id,
            </if>
            <if test="status != null and status != ''">
                `status`,
            </if>
            <if test="addressId != null and addressId != ''">
                address_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="wxNo != null and wxNo != ''">
                #{wxNo,jdbcType=VARCHAR},
            </if>
            <if test="kdNo != null and kdNo != ''">
                #{kdNo,jdbcType=VARCHAR},
            </if>
            <if test="isPay != null and isPay != ''">
                #{isPay,jdbcType=CHAR},
            </if>
            <if test="remark != null and remark != ''">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="portPrice != null">
                #{portPrice,jdbcType=DECIMAL},
            </if>
            <if test="isDel != null and isDel != ''">
                #{isDel,jdbcType=CHAR},
            </if>
            now(),
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="total != null">
                #{total,jdbcType=DECIMAL},
            </if>
            <if test="couponId != null">
                #{couponId,jdbcType=BIGINT},
            </if>
            <if test="status != null and status != ''">
                #{status,jdbcType=CHAR},
            </if>
            <if test="addressId != null and addressId != ''">
                #{addressId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.background.system.entity.Orderd">
        update `orderd`
        <set>
            <if test="wxNo != null and wxNo != ''">
                order_no = #{wxNo,jdbcType=VARCHAR},
            </if>
            <if test="kdNo != null and kdNo != ''">
                kd_no = #{kdNo,jdbcType=VARCHAR},
            </if>
            <if test="isPay != null and isPay != ''">
                is_pay = #{isPay,jdbcType=CHAR},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="portPrice != null">
                port_price = #{portPrice,jdbcType=DECIMAL},
            </if>
            <if test="isDel != null and isDel != ''">
                is_del = #{isDel,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=DECIMAL},
            </if>
            <if test="couponId != null">
                coupon_id = #{couponId,jdbcType=BIGINT},
            </if>
            <if test="status != null and status != ''">
                `status` = #{status,jdbcType=CHAR},
            </if>
            <if test="addressId != null and addressId != ''">
                address_id = #{addressId,jdbcType=VARCHAR},
            </if>
            <!--            <if test="num != null">-->
            <!--                num = #{num,jdbcType=INTEGER},-->
            <!--            </if>-->
            <!--            <if test="pictureId != null and pictureId != ''">-->
            <!--                picture_id = #{pictureId,jdbcType=VARCHAR},-->
            <!--            </if>-->
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.background.system.entity.Orderd">
        update `orderd`
        set order_no    = #{wxNo,jdbcType=VARCHAR},
            kd_no       = #{kdNo,jdbcType=VARCHAR},
            is_pay      = #{isPay,jdbcType=CHAR},
            remark      = #{remark,jdbcType=VARCHAR},
            port_price  = #{portPrice,jdbcType=DECIMAL},
            is_del      = #{isDel,jdbcType=CHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            total       = #{total,jdbcType=DECIMAL},
            coupon_id   = #{couponId,jdbcType=BIGINT},
            `status`    = #{status,jdbcType=CHAR},
            address_id  = #{addressId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.background.system.entity.Orderd"
            useGeneratedKeys="true">
        insert into `orderd` (remark, port_price, total,
                              coupon_id, `status`, address_id,
                              caizhi_id,
                              size_id, create_user,
                              create_time)
        values (#{remark,jdbcType=VARCHAR}, #{portPrice,jdbcType=DECIMAL}, #{total,jdbcType=DECIMAL},
                #{couponId,jdbcType=BIGINT}, #{status,jdbcType=CHAR}, #{addressId,jdbcType=VARCHAR},
                #{caizhiId,jdbcType=VARCHAR},
                #{sizeId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="getCurrentOrderCount" resultType="int">
        select count(*)
        from `orderd`
        where is_del = 0
          and create_user = #{openId}
    </select>

    <select id="getOrderList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `orderd` where is_del = 0
                        and create_user = #{openId}
        <if test="page != null and size != null">
            limit #{page}
              , #{size}
        </if>
    </select>

    <delete id="deleteOrderById">
        update `orderd`
        set is_del = 1,
            status=4
        where id = #{id};
    </delete>

    <select id="getOrderAllList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `orderd` where is_del = 0
        <if test="page != null and size != null">
            limit #{page}
                , #{size}
        </if>
    </select>

    <select id="getOrderCount" resultType="com.background.system.response.OrderCountResponse">
        select any_value(sum(total))    totalCount,
               any_value(count(is_pay)) payCount,
               is_pay,
               any_value(count(is_del)) delCount,
               is_del
        from `orderd`
        group by is_del
    </select>

    <select id="getHasKdNoCount" resultType="int">
        select count(*)
        from `orderd`
        where kd_no is not null
    </select>

    <select id="getCloseCount" resultType="int">
        select count(*)
        from `orderd`
        where `status` = 3
    </select>

    <!-- 0-待付款  1-待发货 2-配送中 3-已完成 4-已取消   -->
    <select id="getOrderByType" resultMap="BaseResultMap">
        <!--  待付款      -->
        <if test="type == 0">
            select *
            from `orderd`
            where is_pay = 0
        </if>
        <!--   待发货  -->
        <if test="type == 1">
            select *
            from `orderd`
            where is_pay = 1
        </if>
        <!--  配送中  -->
        <if test="type == 2">
            select *
            from `orderd`
            where kd_no is not null
        </if>
        <!-- 已完成 -->
        <if test="type == 3">
            select *
            from `orderd`
            where `status` = 3
        </if>
        <!--  已取消 -->
        <if test="type == 4">
            select *
            from `orderd`
            where is_del = 1
        </if>
        <if test="sizeIds != null and sizeIds.size() != 0">
            and size_id in
            <foreach collection="sizeIds" item="key" index="index" open="(" close=")" separator=",">
                #{key,jdbcType=VARCHAR}
            </foreach>
        </if>
        <if test="page != null and size != null">
            limit #{page}
              , #{size}
        </if>
    </select>

    <select id="getOrderCountByType" resultType="int">
        <!--  待付款      -->
        <if test="type == 0">
            select count(*)
            from `orderd`
            where is_pay = 0 and is_del=0
        </if>
        <!--   待发货  -->
        <if test="type == 1">
            select count(*)
            from `orderd`
            where is_pay = 1 and is_del=0
        </if>
        <!--  配送中  -->
        <if test="type == 2">
            select count(*)
            from `orderd`
            where kd_no is not null and is_del=0
        </if>
        <!-- 已完成 -->
        <if test="type == 3">
            select count(*)
            from `orderd`
            where `status` = 3 and is_del=0
        </if>
        <!--  已取消 -->
        <if test="type == 4">
            select count(*)
            from `orderd`
            where is_del = 1
        </if>
        <if test="sizeIds != null and sizeIds.size() != 0">
            and size_id in
            <foreach collection="sizeIds" item="key" index="index" open="(" close=")" separator=",">
                #{key,jdbcType=VARCHAR}
            </foreach>
        </if>
    </select>

    <update id="updateKdNo">
        update `orderd`
        set status=2,
            kd_no =#{kdNo},
            update_user=#{updateUser}
        where id = #{id}
    </update>

    <update id="closeOrder">
        update `orderd`
        set status     = 3,
            update_user=#{updateUser}
        where id = #{id}
    </update>

    <select id="getNoZipPathOrder" resultType="com.background.system.response.file.ReadyDownloadFileResponse">
        select o.id,
               s.name                      sizeName,
               s.size,
               s.faces                     face,
               o.order_no                  wxNo,
               oe.picture_id pictureId,
               oe.number
        from `orderd` o
                 inner join size s on o.size_id = s.id
                 inner join order_element oe on o.id = oe.order_id
        where o.is_del = 0
          and o.zip_path is null
          and o.order_no is not null
    </select>

    <update id="updateZipPathById" parameterType="com.background.system.response.BaseResponse">
        update `orderd`
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="`zip_path` = case" suffix="end,">
                <foreach collection="baseResponse" index="index" item="item">
                    when id = #{item.id} then #{item.name}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="baseResponse" item="item" open="(" separator=", ">
            #{item.id}
        </foreach>
    </update>

    <delete id="orderDownload">
        update `orderd`
        set is_download = 1
        where id = #{id}
    </delete>

    <select id="getIndexOrderCount" resultType="com.background.system.response.IndexCountResponse">
        select count(1) as count ,date_format(create_time,'%h') as time
        from `orderd`
        where create_time like concat(#{time}, '%')
        group by date_format(create_time, '%h')
    </select>
</mapper>