<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.background.system.mapper.CouponMapper">

    <resultMap id="BaseResultMap" type="com.background.system.entity.Coupon">
        <!--@Table coupon-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="coupon_id" jdbcType="VARCHAR" property="couponId"/>
        <result column="is_used" jdbcType="CHAR" property="isUsed"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="use_limit" jdbcType="INTEGER" property="useLimit"/>
        <result column="open_id" jdbcType="VARCHAR" property="openId"/>
        <result column="picture_id" jdbcType="VARCHAR" property="pictureId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        coupon_id,
        is_used,
        status,
        price,
        use_limit,
        open_id,
        picture_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from coupon
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from coupon
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.background.system.entity.Coupon">
        insert into coupon (id, coupon_id, is_used,
                            price, use_limit, open_id)
        values (#{id,jdbcType=BIGINT}, #{couponId,jdbcType=VARCHAR}, #{isUsed,jdbcType=CHAR},
                #{price,jdbcType=DECIMAL}, #{useLimit,jdbcType=INTEGER}, #{openId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.background.system.entity.Coupon">
        insert into coupon
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="couponId != null and couponId != ''">
                coupon_id,
            </if>
            <if test="isUsed != null and isUsed != ''">
                is_used,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="useLimit != null">
                use_limit,
            </if>
            <if test="openId != null">
                open_id,
            </if>
            <if test="pictureId != null and pictureId !='' ">
                picture_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="couponId != null and couponId != ''">
                #{couponId,jdbcType=VARCHAR},
            </if>
            <if test="isUsed != null and isUsed != ''">
                #{isUsed,jdbcType=CHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="useLimit != null">
                #{useLimit,jdbcType=INTEGER},
            </if>
            <if test="openId != null">
                #{openId,jdbcType=VARCHAR},
            </if>
            <if test="pictureId != null and pictureId !='' ">
                #{pictureId}
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.background.system.entity.Coupon">
        update coupon
        <set>
            <if test="couponId != null and couponId != ''">
                coupon_id = #{couponId,jdbcType=VARCHAR},
            </if>
            <if test="isUsed != null and isUsed != ''">
                is_used = #{isUsed,jdbcType=CHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="useLimit != null">
                use_limit = #{useLimit,jdbcType=INTEGER},
            </if>
            <if test="openId != null and openId != ''">
                open_id = #{openId,jdbcType=VARCHAR},
            </if>
            <if test="pictureId != null and pictureId != ''">
                picture_id = #{pictureId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.background.system.entity.Coupon">
        update coupon
        set coupon_id = #{couponId,jdbcType=VARCHAR},
            is_used   = #{isUsed,jdbcType=CHAR},
            price     = #{price,jdbcType=DECIMAL},
            use_limit = #{useLimit,jdbcType=INTEGER},
            open_id   = #{openId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getCouponsList"  resultType="com.background.system.entity.Coupon">
        select
        <include refid="Base_Column_List"/>
        from coupon
        <if test="openId != null and openId != ''">
            where open_id=#{openId}
        </if>
        <if test="page != null and size != null">
            limit #{page},#{size}
        </if>
    </select>

    <select id="countCouponsByCurrentUser" resultType="int">
        select count(*) from coupon where open_id=#{openId}
    </select>

    <update id="updateIsUsedCoupon">
        update coupon set is_used = 1 where coupon_id=#{couponId}
    </update>

    <select id="getCouponByCouponId" resultType="java.lang.Boolean">
        select count(*) from coupon where coupon_id=#{couponId} and is_used=0 and open_id is null
    </select>

    <update id="updateCouponUserById">
        update coupon set open_id=#{openId} where coupon_id=#{id}
    </update>

    <select id="selectCountByOpenId" resultType="int">
        select count(*) from coupon
        <if test="openId != null and openId != ''">
            where open_id=#{openId}
        </if>
    </select>
</mapper>